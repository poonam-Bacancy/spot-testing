goog.provide("module$Users$tibor$Work$Projects$spots_frontend$node_modules$react$lib$ReactNoopUpdateQueue");goog.require("module$Users$tibor$Work$Projects$spots_frontend$node_modules$fbjs$lib$warning");var warning$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react$lib$ReactNoopUpdateQueue=module$Users$tibor$Work$Projects$spots_frontend$node_modules$fbjs$lib$warning;
function warnNoop$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react$lib$ReactNoopUpdateQueue(publicInstance,callerName){if(process.env.NODE_ENV!=="production"){var constructor=publicInstance.constructor;process.env.NODE_ENV!=="production"?module$Users$tibor$Work$Projects$spots_frontend$node_modules$fbjs$lib$warning(false,"%s(...): Can only update a mounted or mounting component. "+"This usually means you called %s() on an unmounted component. "+"This is a no-op. Please check the code for the %s component.",
callerName,callerName,constructor&&(constructor.displayName||constructor.name)||"ReactClass"):void 0}}
var module$Users$tibor$Work$Projects$spots_frontend$node_modules$react$lib$ReactNoopUpdateQueue={isMounted:function(publicInstance){return false},enqueueCallback:function(publicInstance,callback){},enqueueForceUpdate:function(publicInstance){warnNoop$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react$lib$ReactNoopUpdateQueue(publicInstance,"forceUpdate")},enqueueReplaceState:function(publicInstance,completeState){warnNoop$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react$lib$ReactNoopUpdateQueue(publicInstance,
"replaceState")},enqueueSetState:function(publicInstance,partialState){warnNoop$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react$lib$ReactNoopUpdateQueue(publicInstance,"setState")}}