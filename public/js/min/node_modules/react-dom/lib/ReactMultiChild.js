goog.provide("module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactMultiChild");goog.require("module$Users$tibor$Work$Projects$spots_frontend$node_modules$fbjs$lib$emptyFunction");goog.require("module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactComponentEnvironment");goog.require("module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactChildReconciler");goog.require("module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactInstrumentation");
goog.require("module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$flattenChildren");goog.require("module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactReconciler");goog.require("module$Users$tibor$Work$Projects$spots_frontend$node_modules$react$lib$ReactCurrentOwner");goog.require("module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$reactProdInvariant");goog.require("module$Users$tibor$Work$Projects$spots_frontend$node_modules$fbjs$lib$invariant");
goog.require("module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactInstanceMap");var _prodInvariant$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactMultiChild=module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$reactProdInvariant;var ReactComponentEnvironment$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactMultiChild=module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactComponentEnvironment;
var ReactInstanceMap$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactMultiChild=module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactInstanceMap;var ReactInstrumentation$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactMultiChild=module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactInstrumentation;
var ReactCurrentOwner$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactMultiChild=module$Users$tibor$Work$Projects$spots_frontend$node_modules$react$lib$ReactCurrentOwner;var ReactReconciler$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactMultiChild=module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactReconciler;
var ReactChildReconciler$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactMultiChild=module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactChildReconciler;var emptyFunction$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactMultiChild=module$Users$tibor$Work$Projects$spots_frontend$node_modules$fbjs$lib$emptyFunction;
var flattenChildren$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactMultiChild=module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$flattenChildren;var invariant$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactMultiChild=module$Users$tibor$Work$Projects$spots_frontend$node_modules$fbjs$lib$invariant;
function makeInsertMarkup$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactMultiChild(markup,afterNode,toIndex){return{type:"INSERT_MARKUP",content:markup,fromIndex:null,fromNode:null,toIndex:toIndex,afterNode:afterNode}}
function makeMove$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactMultiChild(child,afterNode,toIndex){return{type:"MOVE_EXISTING",content:null,fromIndex:child._mountIndex,fromNode:module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactReconciler.getHostNode(child),toIndex:toIndex,afterNode:afterNode}}
function makeRemove$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactMultiChild(child,node){return{type:"REMOVE_NODE",content:null,fromIndex:child._mountIndex,fromNode:node,toIndex:null,afterNode:null}}function makeSetMarkup$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactMultiChild(markup){return{type:"SET_MARKUP",content:markup,fromIndex:null,fromNode:null,toIndex:null,afterNode:null}}
function makeTextContent$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactMultiChild(textContent){return{type:"TEXT_CONTENT",content:textContent,fromIndex:null,fromNode:null,toIndex:null,afterNode:null}}function enqueue$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactMultiChild(queue,update){if(update){queue=queue||[];queue.push(update)}return queue}
function processQueue$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactMultiChild(inst,updateQueue){module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactComponentEnvironment.processChildrenUpdates(inst,updateQueue)}var setChildrenForInstrumentation$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactMultiChild=module$Users$tibor$Work$Projects$spots_frontend$node_modules$fbjs$lib$emptyFunction;
if(process.env.NODE_ENV!=="production"){var getDebugID$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactMultiChild=function(inst){if(!inst._debugID){var internal;if(internal=module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactInstanceMap.get(inst))inst=internal}return inst._debugID};setChildrenForInstrumentation$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactMultiChild=function(children){var debugID=getDebugID$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactMultiChild(this);
if(debugID!==0)module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactInstrumentation.debugTool.onSetChildren(debugID,children?Object.keys(children).map(function(key){return children[key]._debugID}):[])}}
var module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactMultiChild={Mixin:{_reconcilerInstantiateChildren:function(nestedChildren,transaction,context){if(process.env.NODE_ENV!=="production"){var selfDebugID=getDebugID$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactMultiChild(this);if(this._currentElement)try{module$Users$tibor$Work$Projects$spots_frontend$node_modules$react$lib$ReactCurrentOwner.current=this._currentElement._owner;return module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactChildReconciler.instantiateChildren(nestedChildren,
transaction,context,selfDebugID)}finally{module$Users$tibor$Work$Projects$spots_frontend$node_modules$react$lib$ReactCurrentOwner.current=null}}return module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactChildReconciler.instantiateChildren(nestedChildren,transaction,context)},_reconcilerUpdateChildren:function(prevChildren,nextNestedChildrenElements,mountImages,removedNodes,transaction,context){var nextChildren;var selfDebugID=0;if(process.env.NODE_ENV!=="production"){selfDebugID=
getDebugID$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactMultiChild(this);if(this._currentElement){try{module$Users$tibor$Work$Projects$spots_frontend$node_modules$react$lib$ReactCurrentOwner.current=this._currentElement._owner;nextChildren=module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$flattenChildren(nextNestedChildrenElements,selfDebugID)}finally{module$Users$tibor$Work$Projects$spots_frontend$node_modules$react$lib$ReactCurrentOwner.current=
null}module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactChildReconciler.updateChildren(prevChildren,nextChildren,mountImages,removedNodes,transaction,this,this._hostContainerInfo,context,selfDebugID);return nextChildren}}nextChildren=module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$flattenChildren(nextNestedChildrenElements,selfDebugID);module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactChildReconciler.updateChildren(prevChildren,
nextChildren,mountImages,removedNodes,transaction,this,this._hostContainerInfo,context,selfDebugID);return nextChildren},mountChildren:function(nestedChildren,transaction,context){var children=this._reconcilerInstantiateChildren(nestedChildren,transaction,context);this._renderedChildren=children;var mountImages=[];var index=0;for(var name in children)if(children.hasOwnProperty(name)){var child=children[name];var selfDebugID=0;if(process.env.NODE_ENV!=="production")selfDebugID=getDebugID$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactMultiChild(this);
var mountImage=module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactReconciler.mountComponent(child,transaction,this,this._hostContainerInfo,context,selfDebugID);child._mountIndex=index++;mountImages.push(mountImage)}if(process.env.NODE_ENV!=="production")setChildrenForInstrumentation$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactMultiChild.call(this,children);return mountImages},updateTextContent:function(nextContent){var prevChildren=
this._renderedChildren;module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactChildReconciler.unmountChildren(prevChildren,false);for(var name in prevChildren)if(prevChildren.hasOwnProperty(name))!false?process.env.NODE_ENV!=="production"?module$Users$tibor$Work$Projects$spots_frontend$node_modules$fbjs$lib$invariant(false,"updateTextContent called on non-empty component."):module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$reactProdInvariant("118"):
void 0;var updates=[makeTextContent$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactMultiChild(nextContent)];processQueue$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactMultiChild(this,updates)},updateMarkup:function(nextMarkup){var prevChildren=this._renderedChildren;module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactChildReconciler.unmountChildren(prevChildren,false);for(var name in prevChildren)if(prevChildren.hasOwnProperty(name))!false?
process.env.NODE_ENV!=="production"?module$Users$tibor$Work$Projects$spots_frontend$node_modules$fbjs$lib$invariant(false,"updateTextContent called on non-empty component."):module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$reactProdInvariant("118"):void 0;var updates=[makeSetMarkup$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactMultiChild(nextMarkup)];processQueue$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactMultiChild(this,
updates)},updateChildren:function(nextNestedChildrenElements,transaction,context){this._updateChildren(nextNestedChildrenElements,transaction,context)},_updateChildren:function(nextNestedChildrenElements,transaction,context){var prevChildren=this._renderedChildren;var removedNodes={};var mountImages=[];var nextChildren=this._reconcilerUpdateChildren(prevChildren,nextNestedChildrenElements,mountImages,removedNodes,transaction,context);if(!nextChildren&&!prevChildren)return;var updates=null;var name;
var nextIndex=0;var lastIndex=0;var nextMountIndex=0;var lastPlacedNode=null;for(name in nextChildren){if(!nextChildren.hasOwnProperty(name))continue;var prevChild=prevChildren&&prevChildren[name];var nextChild=nextChildren[name];if(prevChild===nextChild){updates=enqueue$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactMultiChild(updates,this.moveChild(prevChild,lastPlacedNode,nextIndex,lastIndex));lastIndex=Math.max(prevChild._mountIndex,lastIndex);prevChild._mountIndex=
nextIndex}else{if(prevChild)lastIndex=Math.max(prevChild._mountIndex,lastIndex);updates=enqueue$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactMultiChild(updates,this._mountChildAtIndex(nextChild,mountImages[nextMountIndex],lastPlacedNode,nextIndex,transaction,context));nextMountIndex++}nextIndex++;lastPlacedNode=module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactReconciler.getHostNode(nextChild)}for(name in removedNodes)if(removedNodes.hasOwnProperty(name))updates=
enqueue$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactMultiChild(updates,this._unmountChild(prevChildren[name],removedNodes[name]));if(updates)processQueue$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactMultiChild(this,updates);this._renderedChildren=nextChildren;if(process.env.NODE_ENV!=="production")setChildrenForInstrumentation$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactMultiChild.call(this,
nextChildren)},unmountChildren:function(safely){var renderedChildren=this._renderedChildren;module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactChildReconciler.unmountChildren(renderedChildren,safely);this._renderedChildren=null},moveChild:function(child,afterNode,toIndex,lastIndex){if(child._mountIndex<lastIndex)return makeMove$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactMultiChild(child,afterNode,toIndex)},createChild:function(child,
afterNode,mountImage){return makeInsertMarkup$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactMultiChild(mountImage,afterNode,child._mountIndex)},removeChild:function(child,node){return makeRemove$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactMultiChild(child,node)},_mountChildAtIndex:function(child,mountImage,afterNode,index,transaction,context){child._mountIndex=index;return this.createChild(child,afterNode,mountImage)},_unmountChild:function(child,
node){var update=this.removeChild(child,node);child._mountIndex=null;return update}}}