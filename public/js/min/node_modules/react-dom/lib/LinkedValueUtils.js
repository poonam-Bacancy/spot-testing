goog.provide("module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$LinkedValueUtils");goog.require("module$Users$tibor$Work$Projects$spots_frontend$node_modules$react$lib$React");goog.require("module$Users$tibor$Work$Projects$spots_frontend$node_modules$fbjs$lib$warning");goog.require("module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$reactProdInvariant");goog.require("module$Users$tibor$Work$Projects$spots_frontend$node_modules$fbjs$lib$invariant");
goog.require("module$Users$tibor$Work$Projects$spots_frontend$node_modules$prop_types$factory");goog.require("module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactPropTypesSecret");var _prodInvariant$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$LinkedValueUtils=module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$reactProdInvariant;
var ReactPropTypesSecret$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$LinkedValueUtils=module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactPropTypesSecret;var propTypesFactory$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$LinkedValueUtils=module$Users$tibor$Work$Projects$spots_frontend$node_modules$prop_types$factory;
var React$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$LinkedValueUtils=module$Users$tibor$Work$Projects$spots_frontend$node_modules$react$lib$React;var PropTypes$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$LinkedValueUtils=module$Users$tibor$Work$Projects$spots_frontend$node_modules$prop_types$factory(module$Users$tibor$Work$Projects$spots_frontend$node_modules$react$lib$React.isValidElement);
var invariant$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$LinkedValueUtils=module$Users$tibor$Work$Projects$spots_frontend$node_modules$fbjs$lib$invariant;var warning$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$LinkedValueUtils=module$Users$tibor$Work$Projects$spots_frontend$node_modules$fbjs$lib$warning;
var hasReadOnlyValue$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$LinkedValueUtils={button:true,checkbox:true,image:true,hidden:true,radio:true,reset:true,submit:true};
function _assertSingleLink$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$LinkedValueUtils(inputProps){!(inputProps.checkedLink==null||inputProps.valueLink==null)?process.env.NODE_ENV!=="production"?module$Users$tibor$Work$Projects$spots_frontend$node_modules$fbjs$lib$invariant(false,"Cannot provide a checkedLink and a valueLink. If you want to use checkedLink, you probably don't want to use valueLink and vice versa."):module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$reactProdInvariant("87"):
void 0}
function _assertValueLink$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$LinkedValueUtils(inputProps){_assertSingleLink$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$LinkedValueUtils(inputProps);!(inputProps.value==null&&inputProps.onChange==null)?process.env.NODE_ENV!=="production"?module$Users$tibor$Work$Projects$spots_frontend$node_modules$fbjs$lib$invariant(false,"Cannot provide a valueLink and a value or onChange event. If you want to use value or onChange, you probably don't want to use valueLink."):module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$reactProdInvariant("88"):
void 0}
function _assertCheckedLink$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$LinkedValueUtils(inputProps){_assertSingleLink$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$LinkedValueUtils(inputProps);!(inputProps.checked==null&&inputProps.onChange==null)?process.env.NODE_ENV!=="production"?module$Users$tibor$Work$Projects$spots_frontend$node_modules$fbjs$lib$invariant(false,"Cannot provide a checkedLink and a checked property or onChange event. If you want to use checked or onChange, you probably don't want to use checkedLink"):module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$reactProdInvariant("89"):
void 0}
var propTypes$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$LinkedValueUtils={value:function(props,propName,componentName){if(!props[propName]||hasReadOnlyValue$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$LinkedValueUtils[props.type]||props.onChange||props.readOnly||props.disabled)return null;return new Error("You provided a `value` prop to a form field without an "+"`onChange` handler. This will render a read-only field. If "+"the field should be mutable use `defaultValue`. Otherwise, "+"set either `onChange` or `readOnly`.")},
checked:function(props,propName,componentName){if(!props[propName]||props.onChange||props.readOnly||props.disabled)return null;return new Error("You provided a `checked` prop to a form field without an "+"`onChange` handler. This will render a read-only field. If "+"the field should be mutable use `defaultChecked`. Otherwise, "+"set either `onChange` or `readOnly`.")},onChange:PropTypes$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$LinkedValueUtils.func};
var loggedTypeFailures$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$LinkedValueUtils={};function getDeclarationErrorAddendum$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$LinkedValueUtils(owner){if(owner){var name=owner.getName();if(name)return" Check the render method of `"+name+"`."}return""}
var module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$LinkedValueUtils={checkPropTypes:function(tagName,props,owner){for(var propName in propTypes$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$LinkedValueUtils){if(propTypes$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$LinkedValueUtils.hasOwnProperty(propName))var error=propTypes$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$LinkedValueUtils[propName](props,
propName,tagName,"prop",null,module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactPropTypesSecret);if(error instanceof Error&&!(error.message in loggedTypeFailures$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$LinkedValueUtils)){loggedTypeFailures$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$LinkedValueUtils[error.message]=true;var addendum=getDeclarationErrorAddendum$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$LinkedValueUtils(owner);
process.env.NODE_ENV!=="production"?module$Users$tibor$Work$Projects$spots_frontend$node_modules$fbjs$lib$warning(false,"Failed form propType: %s%s",error.message,addendum):void 0}}},getValue:function(inputProps){if(inputProps.valueLink){_assertValueLink$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$LinkedValueUtils(inputProps);return inputProps.valueLink.value}return inputProps.value},getChecked:function(inputProps){if(inputProps.checkedLink){_assertCheckedLink$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$LinkedValueUtils(inputProps);
return inputProps.checkedLink.value}return inputProps.checked},executeOnChange:function(inputProps,event){if(inputProps.valueLink){_assertValueLink$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$LinkedValueUtils(inputProps);return inputProps.valueLink.requestChange(event.target.value)}else if(inputProps.checkedLink){_assertCheckedLink$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$LinkedValueUtils(inputProps);return inputProps.checkedLink.requestChange(event.target.checked)}else if(inputProps.onChange)return inputProps.onChange.call(undefined,
event)}}