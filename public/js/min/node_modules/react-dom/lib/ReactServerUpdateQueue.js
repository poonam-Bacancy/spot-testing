goog.provide("module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactServerUpdateQueue");goog.require("module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactUpdateQueue");goog.require("module$Users$tibor$Work$Projects$spots_frontend$node_modules$fbjs$lib$warning");
function _classCallCheck$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactServerUpdateQueue(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function");}var ReactUpdateQueue$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactServerUpdateQueue=module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactUpdateQueue;
var warning$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactServerUpdateQueue=module$Users$tibor$Work$Projects$spots_frontend$node_modules$fbjs$lib$warning;
function warnNoop$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactServerUpdateQueue(publicInstance,callerName){if(process.env.NODE_ENV!=="production"){var constructor=publicInstance.constructor;process.env.NODE_ENV!=="production"?module$Users$tibor$Work$Projects$spots_frontend$node_modules$fbjs$lib$warning(false,"%s(...): Can only update a mounting component. "+"This usually means you called %s() outside componentWillMount() on the server. "+"This is a no-op. Please check the code for the %s component.",
callerName,callerName,constructor&&(constructor.displayName||constructor.name)||"ReactClass"):void 0}}
var module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactServerUpdateQueue=function(){function ReactServerUpdateQueue(transaction){_classCallCheck$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactServerUpdateQueue(this,ReactServerUpdateQueue);this.transaction=transaction}ReactServerUpdateQueue.prototype.isMounted=function isMounted(publicInstance){return false};ReactServerUpdateQueue.prototype.enqueueCallback=function enqueueCallback(publicInstance,
callback,callerName){if(this.transaction.isInTransaction())module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactUpdateQueue.enqueueCallback(publicInstance,callback,callerName)};ReactServerUpdateQueue.prototype.enqueueForceUpdate=function enqueueForceUpdate(publicInstance){if(this.transaction.isInTransaction())module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactUpdateQueue.enqueueForceUpdate(publicInstance);else warnNoop$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactServerUpdateQueue(publicInstance,
"forceUpdate")};ReactServerUpdateQueue.prototype.enqueueReplaceState=function enqueueReplaceState(publicInstance,completeState){if(this.transaction.isInTransaction())module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactUpdateQueue.enqueueReplaceState(publicInstance,completeState);else warnNoop$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactServerUpdateQueue(publicInstance,"replaceState")};ReactServerUpdateQueue.prototype.enqueueSetState=
function enqueueSetState(publicInstance,partialState){if(this.transaction.isInTransaction())module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactUpdateQueue.enqueueSetState(publicInstance,partialState);else warnNoop$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactServerUpdateQueue(publicInstance,"setState")};return ReactServerUpdateQueue}()