goog.provide("module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactDOMComponentTree");goog.require("module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$DOMProperty");goog.require("module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactDOMComponentFlags");goog.require("module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$reactProdInvariant");goog.require("module$Users$tibor$Work$Projects$spots_frontend$node_modules$fbjs$lib$invariant");
var _prodInvariant$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactDOMComponentTree=module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$reactProdInvariant;var DOMProperty$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactDOMComponentTree=module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$DOMProperty;
var ReactDOMComponentFlags$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactDOMComponentTree=module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactDOMComponentFlags;var invariant$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactDOMComponentTree=module$Users$tibor$Work$Projects$spots_frontend$node_modules$fbjs$lib$invariant;
var ATTR_NAME$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactDOMComponentTree=module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$DOMProperty.ID_ATTRIBUTE_NAME;var Flags$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactDOMComponentTree=module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactDOMComponentFlags;
var internalInstanceKey$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactDOMComponentTree="__reactInternalInstance$"+Math.random().toString(36).slice(2);
function shouldPrecacheNode$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactDOMComponentTree(node,nodeID){return node.nodeType===1&&node.getAttribute(ATTR_NAME$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactDOMComponentTree)===String(nodeID)||node.nodeType===8&&node.nodeValue===" react-text: "+nodeID+" "||node.nodeType===8&&node.nodeValue===" react-empty: "+nodeID+" "}
function getRenderedHostOrTextFromComponent$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactDOMComponentTree(component){var rendered;while(rendered=component._renderedComponent)component=rendered;return component}
function precacheNode$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactDOMComponentTree(inst,node){var hostInst=getRenderedHostOrTextFromComponent$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactDOMComponentTree(inst);hostInst._hostNode=node;node[internalInstanceKey$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactDOMComponentTree]=hostInst}
function uncacheNode$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactDOMComponentTree(inst){var node=inst._hostNode;if(node){delete node[internalInstanceKey$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactDOMComponentTree];inst._hostNode=null}}
function precacheChildNodes$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactDOMComponentTree(inst,node){if(inst._flags&Flags$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactDOMComponentTree.hasCachedChildNodes)return;var children=inst._renderedChildren;var childNode=node.firstChild;outer:for(var name in children){if(!children.hasOwnProperty(name))continue;var childInst=children[name];var childID=getRenderedHostOrTextFromComponent$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactDOMComponentTree(childInst)._domID;
if(childID===0)continue;for(;childNode!==null;childNode=childNode.nextSibling)if(shouldPrecacheNode$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactDOMComponentTree(childNode,childID)){precacheNode$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactDOMComponentTree(childInst,childNode);continue outer}!false?process.env.NODE_ENV!=="production"?module$Users$tibor$Work$Projects$spots_frontend$node_modules$fbjs$lib$invariant(false,"Unable to find element with ID %s.",
childID):module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$reactProdInvariant("32",childID):void 0}inst._flags|=Flags$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactDOMComponentTree.hasCachedChildNodes}
function getClosestInstanceFromNode$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactDOMComponentTree(node){if(node[internalInstanceKey$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactDOMComponentTree])return node[internalInstanceKey$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactDOMComponentTree];var parents=[];while(!node[internalInstanceKey$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactDOMComponentTree]){parents.push(node);
if(node.parentNode)node=node.parentNode;else return null}var closest;var inst;for(;node&&(inst=node[internalInstanceKey$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactDOMComponentTree]);node=parents.pop()){closest=inst;if(parents.length)precacheChildNodes$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactDOMComponentTree(inst,node)}return closest}
function getInstanceFromNode$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactDOMComponentTree(node){var inst=getClosestInstanceFromNode$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactDOMComponentTree(node);if(inst!=null&&inst._hostNode===node)return inst;else return null}
function getNodeFromInstance$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactDOMComponentTree(inst){!(inst._hostNode!==undefined)?process.env.NODE_ENV!=="production"?module$Users$tibor$Work$Projects$spots_frontend$node_modules$fbjs$lib$invariant(false,"getNodeFromInstance: Invalid argument."):module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$reactProdInvariant("33"):void 0;if(inst._hostNode)return inst._hostNode;var parents=[];while(!inst._hostNode){parents.push(inst);
!inst._hostParent?process.env.NODE_ENV!=="production"?module$Users$tibor$Work$Projects$spots_frontend$node_modules$fbjs$lib$invariant(false,"React DOM tree root should always have a node reference."):module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$reactProdInvariant("34"):void 0;inst=inst._hostParent}for(;parents.length;inst=parents.pop())precacheChildNodes$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactDOMComponentTree(inst,inst._hostNode);
return inst._hostNode}
var module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactDOMComponentTree={getClosestInstanceFromNode:getClosestInstanceFromNode$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactDOMComponentTree,getInstanceFromNode:getInstanceFromNode$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactDOMComponentTree,getNodeFromInstance:getNodeFromInstance$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactDOMComponentTree,precacheChildNodes:precacheChildNodes$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactDOMComponentTree,
precacheNode:precacheNode$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactDOMComponentTree,uncacheNode:uncacheNode$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactDOMComponentTree}