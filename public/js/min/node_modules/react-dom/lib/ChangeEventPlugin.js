goog.provide("module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin");goog.require("module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$isTextInputElement");goog.require("module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$isEventSupported");goog.require("module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$EventPluginHub");goog.require("module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$inputValueTracking");
goog.require("module$Users$tibor$Work$Projects$spots_frontend$node_modules$fbjs$lib$ExecutionEnvironment");goog.require("module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$EventPropagators");goog.require("module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactUpdates");goog.require("module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$getEventTarget");goog.require("module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$SyntheticEvent");
goog.require("module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactDOMComponentTree");var EventPluginHub$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin=module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$EventPluginHub;var EventPropagators$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin=module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$EventPropagators;
var ExecutionEnvironment$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin=module$Users$tibor$Work$Projects$spots_frontend$node_modules$fbjs$lib$ExecutionEnvironment;var ReactDOMComponentTree$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin=module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactDOMComponentTree;
var ReactUpdates$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin=module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactUpdates;var SyntheticEvent$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin=module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$SyntheticEvent;
var inputValueTracking$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin=module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$inputValueTracking;var getEventTarget$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin=module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$getEventTarget;
var isEventSupported$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin=module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$isEventSupported;var isTextInputElement$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin=module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$isTextInputElement;
var eventTypes$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:["topBlur","topChange","topClick","topFocus","topInput","topKeyDown","topKeyUp","topSelectionChange"]}};
function createAndAccumulateChangeEvent$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin(inst,nativeEvent,target){var event=module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$SyntheticEvent.getPooled(eventTypes$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin.change,inst,nativeEvent,target);event.type="change";module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$EventPropagators.accumulateTwoPhaseDispatches(event);
return event}var activeElement$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin=null;var activeElementInst$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin=null;
function shouldUseChangeEvent$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin(elem){var nodeName=elem.nodeName&&elem.nodeName.toLowerCase();return nodeName==="select"||nodeName==="input"&&elem.type==="file"}var doesChangeEventBubble$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin=false;
if(module$Users$tibor$Work$Projects$spots_frontend$node_modules$fbjs$lib$ExecutionEnvironment.canUseDOM)doesChangeEventBubble$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin=module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$isEventSupported("change")&&(!document.documentMode||document.documentMode>8);
function manualDispatchChangeEvent$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin(nativeEvent){var event=createAndAccumulateChangeEvent$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin(activeElementInst$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin,nativeEvent,module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$getEventTarget(nativeEvent));
module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactUpdates.batchedUpdates(runEventInBatch$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin,event)}
function runEventInBatch$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin(event){module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$EventPluginHub.enqueueEvents(event);module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$EventPluginHub.processEventQueue(false)}
function startWatchingForChangeEventIE8$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin(target,targetInst){activeElement$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin=target;activeElementInst$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin=targetInst;activeElement$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin.attachEvent("onchange",
manualDispatchChangeEvent$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin)}
function stopWatchingForChangeEventIE8$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin(){if(!activeElement$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin)return;activeElement$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin.detachEvent("onchange",manualDispatchChangeEvent$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin);
activeElement$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin=null;activeElementInst$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin=null}
function getInstIfValueChanged$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin(targetInst,nativeEvent){var updated=module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$inputValueTracking.updateValueIfChanged(targetInst);var simulated=nativeEvent.simulated===true&&module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin._allowSimulatedPassThrough;if(updated||simulated)return targetInst}
function getTargetInstForChangeEvent$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin(topLevelType,targetInst){if(topLevelType==="topChange")return targetInst}
function handleEventsForChangeEventIE8$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin(topLevelType,target,targetInst){if(topLevelType==="topFocus"){stopWatchingForChangeEventIE8$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin();startWatchingForChangeEventIE8$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin(target,targetInst)}else if(topLevelType==="topBlur")stopWatchingForChangeEventIE8$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin()}
var isInputEventSupported$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin=false;if(module$Users$tibor$Work$Projects$spots_frontend$node_modules$fbjs$lib$ExecutionEnvironment.canUseDOM)isInputEventSupported$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin=module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$isEventSupported("input")&&(!document.documentMode||document.documentMode>9);
function startWatchingForValueChange$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin(target,targetInst){activeElement$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin=target;activeElementInst$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin=targetInst;activeElement$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin.attachEvent("onpropertychange",
handlePropertyChange$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin)}
function stopWatchingForValueChange$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin(){if(!activeElement$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin)return;activeElement$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin.detachEvent("onpropertychange",handlePropertyChange$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin);
activeElement$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin=null;activeElementInst$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin=null}
function handlePropertyChange$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin(nativeEvent){if(nativeEvent.propertyName!=="value")return;if(getInstIfValueChanged$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin(activeElementInst$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin,nativeEvent))manualDispatchChangeEvent$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin(nativeEvent)}
function handleEventsForInputEventPolyfill$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin(topLevelType,target,targetInst){if(topLevelType==="topFocus"){stopWatchingForValueChange$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin();startWatchingForValueChange$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin(target,targetInst)}else if(topLevelType==="topBlur")stopWatchingForValueChange$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin()}
function getTargetInstForInputEventPolyfill$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin(topLevelType,targetInst,nativeEvent){if(topLevelType==="topSelectionChange"||topLevelType==="topKeyUp"||topLevelType==="topKeyDown")return getInstIfValueChanged$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin(activeElementInst$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin,
nativeEvent)}function shouldUseClickEvent$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin(elem){var nodeName=elem.nodeName;return nodeName&&nodeName.toLowerCase()==="input"&&(elem.type==="checkbox"||elem.type==="radio")}
function getTargetInstForClickEvent$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin(topLevelType,targetInst,nativeEvent){if(topLevelType==="topClick")return getInstIfValueChanged$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin(targetInst,nativeEvent)}
function getTargetInstForInputOrChangeEvent$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin(topLevelType,targetInst,nativeEvent){if(topLevelType==="topInput"||topLevelType==="topChange")return getInstIfValueChanged$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin(targetInst,nativeEvent)}
function handleControlledInputBlur$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin(inst,node){if(inst==null)return;var state=inst._wrapperState||node._wrapperState;if(!state||!state.controlled||node.type!=="number")return;var value=""+node.value;if(node.getAttribute("value")!==value)node.setAttribute("value",value)}
var module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin={eventTypes:eventTypes$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin,_allowSimulatedPassThrough:true,_isInputEventSupported:isInputEventSupported$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin,extractEvents:function(topLevelType,targetInst,nativeEvent,nativeEventTarget){var targetNode=targetInst?module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ReactDOMComponentTree.getNodeFromInstance(targetInst):
window;var getTargetInstFunc;var handleEventFunc;if(shouldUseChangeEvent$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin(targetNode))if(doesChangeEventBubble$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin)getTargetInstFunc=getTargetInstForChangeEvent$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin;else handleEventFunc=handleEventsForChangeEventIE8$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin;
else if(module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$isTextInputElement(targetNode))if(isInputEventSupported$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin)getTargetInstFunc=getTargetInstForInputOrChangeEvent$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin;else{getTargetInstFunc=getTargetInstForInputEventPolyfill$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin;
handleEventFunc=handleEventsForInputEventPolyfill$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin}else if(shouldUseClickEvent$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin(targetNode))getTargetInstFunc=getTargetInstForClickEvent$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin;if(getTargetInstFunc){var inst=getTargetInstFunc(topLevelType,targetInst,nativeEvent);
if(inst){var event=createAndAccumulateChangeEvent$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin(inst,nativeEvent,nativeEventTarget);return event}}if(handleEventFunc)handleEventFunc(topLevelType,targetNode,targetInst);if(topLevelType==="topBlur")handleControlledInputBlur$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$react_dom$lib$ChangeEventPlugin(targetInst,targetNode)}}