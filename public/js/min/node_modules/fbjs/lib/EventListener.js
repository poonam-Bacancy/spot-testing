goog.provide("module$Users$tibor$Work$Projects$spots_frontend$node_modules$fbjs$lib$EventListener");goog.require("module$Users$tibor$Work$Projects$spots_frontend$node_modules$fbjs$lib$emptyFunction");var emptyFunction$$module$Users$tibor$Work$Projects$spots_frontend$node_modules$fbjs$lib$EventListener=module$Users$tibor$Work$Projects$spots_frontend$node_modules$fbjs$lib$emptyFunction;
var module$Users$tibor$Work$Projects$spots_frontend$node_modules$fbjs$lib$EventListener={listen:function listen(target,eventType,callback){if(target.addEventListener){target.addEventListener(eventType,callback,false);return{remove:function remove(){target.removeEventListener(eventType,callback,false)}}}else if(target.attachEvent){target.attachEvent("on"+eventType,callback);return{remove:function remove(){target.detachEvent("on"+eventType,callback)}}}},capture:function capture(target,eventType,callback){if(target.addEventListener){target.addEventListener(eventType,
callback,true);return{remove:function remove(){target.removeEventListener(eventType,callback,true)}}}else{if(process.env.NODE_ENV!=="production")console.error("Attempted to listen to events during the capture phase on a "+"browser that does not support the capture phase. Your application "+"will not receive some events.");return{remove:module$Users$tibor$Work$Projects$spots_frontend$node_modules$fbjs$lib$emptyFunction}}},registerDefault:function registerDefault(){}}